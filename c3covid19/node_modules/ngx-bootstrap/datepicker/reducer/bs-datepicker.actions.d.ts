import { TimeUnit } from 'ngx-bootstrap/chronos';
import { Action } from 'ngx-bootstrap/mini-ngrx';
import { BsDatepickerViewMode, BsViewNavigationEvent, CellHoverEvent, DatepickerRenderOptions, DatepickerDateCustomClasses, DatepickerDateTooltipText } from '../models';
import * as ɵngcc0 from '@angular/core';
export declare class BsDatepickerActions {
    static readonly CALCULATE = "[datepicker] calculate dates matrix";
    static readonly FORMAT = "[datepicker] format datepicker values";
    static readonly FLAG = "[datepicker] set flags";
    static readonly SELECT = "[datepicker] select date";
    static readonly NAVIGATE_OFFSET = "[datepicker] shift view date";
    static readonly NAVIGATE_TO = "[datepicker] change view date";
    static readonly SET_OPTIONS = "[datepicker] update render options";
    static readonly HOVER = "[datepicker] hover date";
    static readonly CHANGE_VIEWMODE = "[datepicker] switch view mode";
    static readonly SET_MIN_DATE = "[datepicker] set min date";
    static readonly SET_MAX_DATE = "[datepicker] set max date";
    static readonly SET_DAYSDISABLED = "[datepicker] set days disabled";
    static readonly SET_DATESDISABLED = "[datepicker] set dates disabled";
    static readonly SET_DATESENABLED = "[datepicker] set dates enabled";
    static readonly SET_IS_DISABLED = "[datepicker] set is disabled";
    static readonly SET_DATE_CUSTOM_CLASSES = "[datepicker] set date custom classes";
    static readonly SET_DATE_TOOLTIP_TEXTS = "[datepicker] set date tooltip texts";
    static readonly SET_LOCALE = "[datepicker] set datepicker locale";
    static readonly SELECT_RANGE = "[daterangepicker] select dates range";
    calculate(): Action;
    format(): Action;
    flag(): Action;
    select(date: Date): Action;
    changeViewMode(event: BsDatepickerViewMode): Action;
    navigateTo(event: BsViewNavigationEvent): Action;
    navigateStep(step: TimeUnit): Action;
    setOptions(options: DatepickerRenderOptions): Action;
    selectRange(value: Date[]): Action;
    hoverDay(event: CellHoverEvent): Action;
    minDate(date: Date): Action;
    maxDate(date: Date): Action;
    daysDisabled(days: number[]): Action;
    datesDisabled(dates: Date[]): Action;
    datesEnabled(dates: Date[]): Action;
    isDisabled(value: boolean): Action;
    setDateCustomClasses(value: DatepickerDateCustomClasses[]): Action;
    setDateTooltipTexts(value: DatepickerDateTooltipText[]): Action;
    setLocale(locale: string): Action;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BsDatepickerActions, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<BsDatepickerActions>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF0ZXBpY2tlci5hY3Rpb25zLmQudHMiLCJzb3VyY2VzIjpbImJzLWRhdGVwaWNrZXIuYWN0aW9ucy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGltZVVuaXQgfSBmcm9tICduZ3gtYm9vdHN0cmFwL2Nocm9ub3MnO1xuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9taW5pLW5ncngnO1xuaW1wb3J0IHsgQnNEYXRlcGlja2VyVmlld01vZGUsIEJzVmlld05hdmlnYXRpb25FdmVudCwgQ2VsbEhvdmVyRXZlbnQsIERhdGVwaWNrZXJSZW5kZXJPcHRpb25zLCBEYXRlcGlja2VyRGF0ZUN1c3RvbUNsYXNzZXMsIERhdGVwaWNrZXJEYXRlVG9vbHRpcFRleHQgfSBmcm9tICcuLi9tb2RlbHMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQnNEYXRlcGlja2VyQWN0aW9ucyB7XG4gICAgc3RhdGljIHJlYWRvbmx5IENBTENVTEFURSA9IFwiW2RhdGVwaWNrZXJdIGNhbGN1bGF0ZSBkYXRlcyBtYXRyaXhcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgRk9STUFUID0gXCJbZGF0ZXBpY2tlcl0gZm9ybWF0IGRhdGVwaWNrZXIgdmFsdWVzXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IEZMQUcgPSBcIltkYXRlcGlja2VyXSBzZXQgZmxhZ3NcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VMRUNUID0gXCJbZGF0ZXBpY2tlcl0gc2VsZWN0IGRhdGVcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgTkFWSUdBVEVfT0ZGU0VUID0gXCJbZGF0ZXBpY2tlcl0gc2hpZnQgdmlldyBkYXRlXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IE5BVklHQVRFX1RPID0gXCJbZGF0ZXBpY2tlcl0gY2hhbmdlIHZpZXcgZGF0ZVwiO1xuICAgIHN0YXRpYyByZWFkb25seSBTRVRfT1BUSU9OUyA9IFwiW2RhdGVwaWNrZXJdIHVwZGF0ZSByZW5kZXIgb3B0aW9uc1wiO1xuICAgIHN0YXRpYyByZWFkb25seSBIT1ZFUiA9IFwiW2RhdGVwaWNrZXJdIGhvdmVyIGRhdGVcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgQ0hBTkdFX1ZJRVdNT0RFID0gXCJbZGF0ZXBpY2tlcl0gc3dpdGNoIHZpZXcgbW9kZVwiO1xuICAgIHN0YXRpYyByZWFkb25seSBTRVRfTUlOX0RBVEUgPSBcIltkYXRlcGlja2VyXSBzZXQgbWluIGRhdGVcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX01BWF9EQVRFID0gXCJbZGF0ZXBpY2tlcl0gc2V0IG1heCBkYXRlXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9EQVlTRElTQUJMRUQgPSBcIltkYXRlcGlja2VyXSBzZXQgZGF5cyBkaXNhYmxlZFwiO1xuICAgIHN0YXRpYyByZWFkb25seSBTRVRfREFURVNESVNBQkxFRCA9IFwiW2RhdGVwaWNrZXJdIHNldCBkYXRlcyBkaXNhYmxlZFwiO1xuICAgIHN0YXRpYyByZWFkb25seSBTRVRfREFURVNFTkFCTEVEID0gXCJbZGF0ZXBpY2tlcl0gc2V0IGRhdGVzIGVuYWJsZWRcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX0lTX0RJU0FCTEVEID0gXCJbZGF0ZXBpY2tlcl0gc2V0IGlzIGRpc2FibGVkXCI7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9EQVRFX0NVU1RPTV9DTEFTU0VTID0gXCJbZGF0ZXBpY2tlcl0gc2V0IGRhdGUgY3VzdG9tIGNsYXNzZXNcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX0RBVEVfVE9PTFRJUF9URVhUUyA9IFwiW2RhdGVwaWNrZXJdIHNldCBkYXRlIHRvb2x0aXAgdGV4dHNcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX0xPQ0FMRSA9IFwiW2RhdGVwaWNrZXJdIHNldCBkYXRlcGlja2VyIGxvY2FsZVwiO1xuICAgIHN0YXRpYyByZWFkb25seSBTRUxFQ1RfUkFOR0UgPSBcIltkYXRlcmFuZ2VwaWNrZXJdIHNlbGVjdCBkYXRlcyByYW5nZVwiO1xuICAgIGNhbGN1bGF0ZSgpOiBBY3Rpb247XG4gICAgZm9ybWF0KCk6IEFjdGlvbjtcbiAgICBmbGFnKCk6IEFjdGlvbjtcbiAgICBzZWxlY3QoZGF0ZTogRGF0ZSk6IEFjdGlvbjtcbiAgICBjaGFuZ2VWaWV3TW9kZShldmVudDogQnNEYXRlcGlja2VyVmlld01vZGUpOiBBY3Rpb247XG4gICAgbmF2aWdhdGVUbyhldmVudDogQnNWaWV3TmF2aWdhdGlvbkV2ZW50KTogQWN0aW9uO1xuICAgIG5hdmlnYXRlU3RlcChzdGVwOiBUaW1lVW5pdCk6IEFjdGlvbjtcbiAgICBzZXRPcHRpb25zKG9wdGlvbnM6IERhdGVwaWNrZXJSZW5kZXJPcHRpb25zKTogQWN0aW9uO1xuICAgIHNlbGVjdFJhbmdlKHZhbHVlOiBEYXRlW10pOiBBY3Rpb247XG4gICAgaG92ZXJEYXkoZXZlbnQ6IENlbGxIb3ZlckV2ZW50KTogQWN0aW9uO1xuICAgIG1pbkRhdGUoZGF0ZTogRGF0ZSk6IEFjdGlvbjtcbiAgICBtYXhEYXRlKGRhdGU6IERhdGUpOiBBY3Rpb247XG4gICAgZGF5c0Rpc2FibGVkKGRheXM6IG51bWJlcltdKTogQWN0aW9uO1xuICAgIGRhdGVzRGlzYWJsZWQoZGF0ZXM6IERhdGVbXSk6IEFjdGlvbjtcbiAgICBkYXRlc0VuYWJsZWQoZGF0ZXM6IERhdGVbXSk6IEFjdGlvbjtcbiAgICBpc0Rpc2FibGVkKHZhbHVlOiBib29sZWFuKTogQWN0aW9uO1xuICAgIHNldERhdGVDdXN0b21DbGFzc2VzKHZhbHVlOiBEYXRlcGlja2VyRGF0ZUN1c3RvbUNsYXNzZXNbXSk6IEFjdGlvbjtcbiAgICBzZXREYXRlVG9vbHRpcFRleHRzKHZhbHVlOiBEYXRlcGlja2VyRGF0ZVRvb2x0aXBUZXh0W10pOiBBY3Rpb247XG4gICAgc2V0TG9jYWxlKGxvY2FsZTogc3RyaW5nKTogQWN0aW9uO1xufVxuIl19