{"version":3,"file":"ngx-bootstrap-progressbar.js","sources":["ng:/ngx-bootstrap/progressbar/progressbar.config.ts","ng:/ngx-bootstrap/progressbar/progressbar.component.ts","ng:/ngx-bootstrap/progressbar/bar.component.ts","ng:/ngx-bootstrap/progressbar/progressbar.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProgressbarConfig {\n  /** if `true` changing value of progress bar will be animated */\n  animate: Boolean = false;\n  /** maximum total value of progress element */\n  max = 100;\n}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { ProgressbarConfig } from './progressbar.config';\nimport { ProgressbarType } from './progressbar-type.interface';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { BarComponent } from './bar.component';\n\n@Component({\n  selector: 'progressbar',\n  templateUrl: './progressbar.component.html',\n  styles: [\n    `\n    :host {\n      width: 100%;\n      display: flex;\n    }\n  `\n  ]\n})\nexport class ProgressbarComponent {\n  /** if `true` changing value of progress bar will be animated */\n  @Input()\n  set animate(value: boolean) {\n    this._animate = value;\n    this.bars.forEach((b: BarComponent) => {\n      b.animate = value;\n    });\n  }\n  /** If `true`, striped classes are applied */\n  @Input()\n  set striped(value: boolean) {\n    this._striped = value;\n    this.bars.forEach((b: BarComponent) => {\n      b.striped = value;\n    });\n  }\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type: ProgressbarType;\n  /** current value of progress bar. Could be a number or array of objects\n   * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\n   */\n  @Input()\n  /* tslint:disable-next-line:no-any */\n  set value(value: number | any[]) {\n    this.isStacked = Array.isArray(value);\n    this._value = value;\n  }\n  isStacked = false;\n  _striped: boolean;\n  _animate: boolean;\n  _max = 100;\n\n  /* tslint:disable-next-line:no-any */\n  _value: number | any[];\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  /** maximum total value of progress element */\n  @HostBinding('attr.max')\n  @Input()\n  get max(): number {\n    return this._max;\n  }\n\n  set max(v: number) {\n    this._max = v;\n    this.bars.forEach((bar: BarComponent) => {\n      bar.recalculatePercentage();\n    });\n  }\n\n  @HostBinding('class.progress') addClass = true;\n\n  /* tslint:disable-next-line:no-any */\n  bars: BarComponent[] = [];\n  constructor(config: ProgressbarConfig) {\n    Object.assign(this, config);\n  }\n  addBar(bar: BarComponent): void {\n    bar.animate = this._animate;\n    bar.striped = this._striped;\n\n    this.bars.push(bar);\n  }\n\n  removeBar(bar: BarComponent): void {\n    this.bars.splice(this.bars.indexOf(bar), 1);\n  }\n}\n","import {\n  Component,\n  Host,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Renderer2, SimpleChanges\n} from '@angular/core';\n\nimport { ProgressbarComponent } from './progressbar.component';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\n// todo: number pipe\n// todo: use query from progress?\n@Component({\n  selector: 'bar',\n  templateUrl: './bar.component.html',\n  host: {\n    role: 'progressbar',\n    'aria-valuemin': '0',\n    '[class.progress-bar-animated]': '!isBs3 && animate',\n    '[class.progress-bar-striped]': 'striped',\n    '[class.active]': 'isBs3 && animate',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\n    '[attr.aria-valuemax]': 'max',\n    '[style.height.%]': '\"100\"'\n  }\n})\nexport class BarComponent implements OnInit, OnDestroy {\n  @Input() max: number;\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type: string;\n\n  /** current value of progress bar */\n  @Input() value: number;\n\n  @HostBinding('style.width.%')\n  get setBarWidth() {\n    this.recalculatePercentage();\n\n    return this.percent;\n  }\n\n  @HostBinding('class.progress-bar') addClass = true;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  striped: boolean;\n  animate: boolean;\n  percent = 0;\n  progress: ProgressbarComponent;\n\n  private _prevType: string;\n\n  constructor(\n    private el: ElementRef,\n    @Host() progress: ProgressbarComponent,\n    private renderer: Renderer2\n  ) {\n    this.progress = progress;\n  }\n\n  ngOnInit(): void {\n    this.progress.addBar(this);\n  }\n\n  ngOnDestroy(): void {\n    this.progress.removeBar(this);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.value) {\n      if (!changes.value.currentValue && changes.value.currentValue !== 0) {\n        return;\n      }\n      this.value = changes.value.currentValue;\n      this.recalculatePercentage();\n    }\n\n    if (changes.type) {\n      this.type = changes.type.currentValue;\n      this.applyTypeClasses();\n    }\n  }\n\n  recalculatePercentage(): void {\n    this.percent = +(this.value / this.progress.max * 100).toFixed(2);\n\n    const totalPercentage = this.progress.bars\n      .reduce(function (total: number, bar: BarComponent): number {\n        return total + bar.percent;\n      }, 0);\n\n    if (totalPercentage > 100) {\n      this.percent -= totalPercentage - 100;\n    }\n  }\n\n  private applyTypeClasses(): void {\n    if (this._prevType) {\n      const barTypeClass = `progress-bar-${this._prevType}`;\n      const bgClass = `bg-${this._prevType}`;\n      this.renderer.removeClass(this.el.nativeElement, barTypeClass);\n      this.renderer.removeClass(this.el.nativeElement, bgClass);\n      this._prevType = null;\n    }\n\n    if (this.type) {\n      const barTypeClass = `progress-bar-${this.type}`;\n      const bgClass = `bg-${this.type}`;\n      this.renderer.addClass(this.el.nativeElement, barTypeClass);\n      this.renderer.addClass(this.el.nativeElement, bgClass);\n      this._prevType = this.type;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { BarComponent } from './bar.component';\nimport { ProgressbarComponent } from './progressbar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BarComponent, ProgressbarComponent],\n  exports: [BarComponent, ProgressbarComponent]\n})\nexport class ProgressbarModule {\n  static forRoot(): ModuleWithProviders<ProgressbarModule> {\n    return { ngModule: ProgressbarModule, providers: [] };\n  }\n}\n"]}