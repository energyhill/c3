{"version":3,"file":"ng-chartjs.js","sources":["ng:/ng-chartjs/lib/store.service.ts","ng:/ng-chartjs/lib/plugins-config.ts","ng:/ng-chartjs/lib/ng-chartjs.service.ts","ng:/ng-chartjs/lib/colors.ts","ng:/ng-chartjs/lib/ng-chartjs.directive.ts","ng:/ng-chartjs/lib/plugin-token.ts","ng:/ng-chartjs/lib/ng-chartjs.module.ts","ng:/ng-chartjs/public_api.ts","ng:/ng-chartjs/ng-chartjs.ts"],"names":["plugins","Chart.plugins"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n  private _chartInstances: any[] = [];\n  private _chartId: string[] = [];\n\n  addChart(id: string, chart: any): void {\n    for (let i = 0; i < this._chartId.length; i++) {\n      if (id === this._chartId[i]) {\n        return;\n      }\n    }\n    this._chartId.push(id);\n    this._chartInstances.push(chart);\n  }\n\n  removeChart(id: string): void {\n    for (let i = 0; i < this._chartId.length; i++) {\n      if (id === this._chartId[i]) {\n        this._chartId.splice(i, 1);\n        this._chartInstances.splice(i, 1);  // delete chart instance.\n      }\n    }\n  }\n\n  getChart(id: string): any {\n    for (let i = 0; i < this._chartId.length; i++) {\n      if (id === this._chartId[i]) {\n        return this._chartInstances[i];\n      }\n    }\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PluginConfig {\n    plugins: any[] = [];\n}\n","import { Injectable } from '@angular/core';\nimport * as Chart from 'chart.js';\nimport { PluginConfig } from './plugins-config';\nimport { StoreService } from './store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgChartjsService {\n\n    constructor(\n      private storeService: StoreService,\n      private pluginConfig: PluginConfig) {\n      const plugins = pluginConfig.plugins;\n      if (plugins.length !== 0 || plugins) {\n        for (let i = 0; i < plugins.length; i++) {\n          if (plugins[i]) {\n            Chart.plugins.register(plugins[i]);\n          }\n        }\n      }\n    }\n    // get chart instance by id\n    getChart(id: string): any {\n      return this.storeService.getChart(id);\n    }\n}\n","export interface Color {\n    backgroundColor?: string | string[];\n    borderWidth?: number | number[];\n    borderColor?: string | string[];\n    borderCapStyle?: string;\n    borderDash?: number[];\n    borderDashOffset?: number;\n    borderJoinStyle?: string;\n\n    pointBorderColor?: string | string[];\n    pointBackgroundColor?: string | string[];\n    pointBorderWidth?: number | number[];\n\n    pointRadius?: number | number[];\n    pointHoverRadius?: number | number[];\n    pointHitRadius?: number | number[];\n\n    pointHoverBackgroundColor?: string | string[];\n    pointHoverBorderColor?: string | string[];\n    pointHoverBorderWidth?: number | number[];\n    pointStyle?: string | string[];\n\n    hoverBackgroundColor?: string | string[];\n    hoverBorderColor?: string | string[];\n    hoverBorderWidth?: number;\n}\n\n// Default colors\nexport const DefaultColors: number[][] = [\n    [63, 81, 181],       // Indogo\n    [0, 150, 136],       // Teal\n    [255, 152, 0],       // Orange\n    [233, 30, 99],       // Pink\n    [156, 39, 176],      // Purple\n    [0, 188, 212],       // Cyan\n    [3, 169, 244],       // Light Blue\n    [96, 125, 139],      // Blue Grey\n    [255, 193, 7],       // Amber\n    [37, 155, 36],       // Green\n    [205, 220, 57],      // Lime\n    [86, 119, 252]       // Blue\n];\n\n// pie | doughnut\nexport interface Colors extends Color {\n    data?: number[];\n    label?: string;\n}\n\nexport function rgba(colour: number[], alpha: number): string {\n    return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\n\nexport function getRandomInt(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function formatLineColor(colors: number[]): Color {\n    return {\n        backgroundColor: rgba(colors, 0.35),\n        borderColor: rgba(colors, 1),\n        pointBackgroundColor: rgba(colors, 1),\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: rgba(colors, 0.95)\n    };\n}\n\nexport function formatBarColor(colors: number[]): Color {\n    return {\n        backgroundColor: rgba(colors, 0.75),\n        borderColor: rgba(colors, 1),\n        hoverBackgroundColor: rgba(colors, 1),\n        hoverBorderColor: rgba(colors, 1)\n    };\n}\n\nexport function formatPieColors(colors: number[][]): Colors {\n    return {\n        backgroundColor: colors.map((color: number[]) => rgba(color, 0.76)),\n        borderColor: colors.map(() => '#fff'),\n        pointBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n        pointBorderColor: colors.map(() => '#fff'),\n        pointHoverBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n        pointHoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\n    };\n}\n\nexport function formatPolarAreaColors(colors: number[][]): Color {\n    return {\n        backgroundColor: colors.map((color: number[]) => rgba(color, 0.75)),\n        borderColor: colors.map((color: number[]) => rgba(color, 1)),\n        hoverBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n        hoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\n    };\n}\n\nexport function getRandomColor(): number[] {\n    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n\n\n/**\n* @method Generate colors for line|bar charts\n* @param index he index of the default color array. eg. 0, 1\n* @return number[]\n* @author vincent 2019-01-22\n* @version 0.0.0\n* @example\n* @log 1. vincent,2019-01-22,done\n*/\nexport function generateColor(index: number): number[] {\n    return DefaultColors[index] || getRandomColor();\n}\n\n\n/**\n* @method Generate colors for pie|doughnut charts\n* @param count Length of data. eg. datasets.data.length\n* @return number[][]\n* @author vincent 2019-01-22\n* @version 0.0.0\n* @example\n* @log 1. vincent,2019-01-22,done\n*/\nexport function generateColors(count: number): number[][] {\n    const colorsArr: number[][] = new Array(count);\n    for (let i = 0; i < count; i++) {\n        colorsArr[i] = DefaultColors[i] || getRandomColor();\n    }\n    return colorsArr;\n}\n\n\n/**\n* @method Generate colors by chart type\n* @param chartType The type of chart you are using. eg. line,bar\n* @param index The index of the default color array. eg. DefaultColors[index]\n* @param count Length of data. eg. datasets.data.length\n* @return Color or number[]\n* @author vincent 2019-01-22\n* @version 0.0.0\n* @example\n* @log 1. vincent,2019-01-22,done\n*/\nexport function getColors(chartType: string, index: number, count: number): Color | number[] {\n    if (chartType === 'pie' ||\n        chartType === 'doughnut' ||\n        chartType === 'bubble' ||\n        chartType === 'scatter') {\n        return formatPieColors(generateColors(count));\n    }\n\n    if (chartType === 'polarArea') {\n        return formatPolarAreaColors(generateColors(count));\n    }\n\n    if (chartType === 'line' || chartType === 'radar') {\n        return formatLineColor(generateColor(index));\n    }\n\n    if (chartType === 'bar' || chartType === 'horizontalBar') {\n        return formatBarColor(generateColor(index));\n    }\n\n    return generateColor(index);\n}\n","import {\n  OnDestroy,\n  OnInit,\n  OnChanges,\n  EventEmitter,\n  ElementRef,\n  Input,\n  Output,\n  SimpleChanges,\n  Directive,\n  NgZone\n} from '@angular/core';\nimport * as Chart from 'chart.js';\nimport { StoreService } from './store.service';\nimport { NgChartjsService } from './ng-chartjs.service';\nimport { getColors, Colors } from './colors';\n\nexport type Labels = Array<string | string[] | number | number[] | Date | Date[] | any | any[]>;\nexport type Orientation = 'oldest' | 'latest';\nexport interface NgChartjsEvent { event: MouseEvent; active: Array<{}>; }\n\n/* tslint:disable-next-line */\n@Directive({ selector: 'canvas[ngChartjs]', exportAs: 'ngChartjs' })\nexport class NgChartjsDirective implements OnDestroy, OnChanges, OnInit {\n\n  // å¾è¡¨çç¹éï¼å®åºè¯¥æ¯æ°ç»<number []>ä»ç¨äºçº¿ï¼æ¡åé·è¾¾ï¼å¦åæ°å­[];\n  @Input() data: number[] | any[];\n  // ç¸å½äºchart.jså data: {datasets: [{...}]}\n  @Input() datasets: Chart.ChartDataSets[];\n  // xè½´æ ç­¾ãè¿å¯¹å¾è¡¨æ¥è¯´æ¯å¿è¦çï¼çº¿ï¼æ¡åé·è¾¾ãå¹¶ä¸åªæ¯å¾è¡¨çæ ç­¾ï¼æ¬åï¼ï¼polarAreaï¼pieådoughnut\n  @Input() labels: Labels = [];\n  // ç¸å½äºchart.jsçoption\n  @Input() options: Chart.ChartOptions = {};\n  // åèæä»¶å±æ§\n  @Input() inlinePlugins: any[];\n  // chartType line, bar, radar, pie, polarArea, doughnut\n  @Input() chartType: Chart.ChartType;\n  // æ°æ®é¢è²ï¼å¦ææ²¡ææå®ï¼å°ä½¿ç¨é»è®¤å|æéæºé¢è²\n  @Input() colors: Colors[];\n  // æ¯å¦æ¾ç¤ºå¾ä¾\n  @Input() legend: boolean;\n\n  @Input() adding: { labels: Labels[], data: any[][] };\n  @Input() removing: { orientation: Orientation };  // orientation is 'oldest' or 'latest\n  @Input() resetOption: Chart.ChartType;\n\n  @Input() noZone = true; // disable angular NgZone\n  @Input() id: string = null; // chart instance id\n\n  // é¼ æ ç¹å»å¾è¡¨ææçåºå\n  @Output() chartClick: EventEmitter<NgChartjsEvent> = new EventEmitter();\n  // é¼ æ æ¬æµ®å¨æ ç­¾æèæ´»è·çç¹ä¸é¢æ¶\n  @Output() chartHover: EventEmitter<NgChartjsEvent> = new EventEmitter();\n\n  // get Chartjs object\n  chart: Chart;\n  private ctx: CanvasRenderingContext2D;\n  private initFlag = false;\n  private hasChanges = false;\n\n  private element: ElementRef;\n\n  public constructor(\n    element: ElementRef,\n    private ngChartjsService: NgChartjsService,\n    private storeService: StoreService,\n    private zone: NgZone) {\n    this.element = element;   // è·åæä»¤æå¨canvasåç´ \n  }\n\n  ngOnInit(): void {\n    this.ctx = this.element.nativeElement.getContext('2d'); // è·ååç´ çctx\n    this.initFlag = true; // æ¯å¦åå§åäºçæ å¿\n\n    if (this.data || this.datasets) { // å¤æ­dataådatasetsæä¸ä¸ªææ°æ®å°±å·æ°\n      if (this.noZone) {\n        this.zone.runOutsideAngular(() => {\n         this.refresh();\n        });\n      } else {\n        this.refresh();\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // TODO: æä»¶ååå·æ°ï¼å¼æ¾å·æ°æé®\n    if (this.initFlag) {\n      // Check if the changes are in the data or datasets\n      if (changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) {\n        if (changes.data) {\n          this.updateChartData(changes.data.currentValue);\n        } else {\n          this.updateChartData(changes.datasets.currentValue);\n        }\n        this.hasChanges = true;\n      }\n\n      if (changes.hasOwnProperty('labels')) {\n        this.chart.data.labels = changes.labels.currentValue;\n        this.hasChanges = true;\n      }\n\n      if (changes.hasOwnProperty('legend')) {\n        if (changes.legend.currentValue !== changes.legend.previousValue) {\n          this.chart.options.legend.display = changes.legend.currentValue;\n          this.hasChanges = true;\n        }\n      }\n\n      if (changes.hasOwnProperty('adding')) {\n        this.addData_(changes.adding.currentValue.labels, changes.adding.currentValue.data);\n        this.hasChanges = true;\n      }\n\n      if (changes.hasOwnProperty('removing')) {\n        if (changes.removing.currentValue.orientation === 'oldest' || changes.removing.currentValue.orientation === 'latest') {\n          this.removeData_(changes.removing.currentValue.orientation);\n          this.hasChanges = true;\n        }\n      }\n\n      if (changes.hasOwnProperty('chartType')) {\n        this.refresh();\n      }\n\n      if (changes.hasOwnProperty('resetOption')) {\n        Object.assign(this.chart.options, changes.resetOption.currentValue);\n        this.hasChanges = true;\n      }\n\n      if (this.hasChanges) {\n        this.chart.update();\n        this.hasChanges = false;\n      }\n\n      // change chart id\n      if (changes.hasOwnProperty('id')) {\n        this.removeChart(changes.id.previousValue);\n        this.addChart(changes.id.currentValue);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = void 0;\n\n      this.removeChart(this.id);\n    }\n  }\n\n  // update chartjs\n  update(): void {\n    this.chart.update();\n  }\n\n  // Dynamic add data\n  addData(labels: Labels[], data: any[][]): void {\n    this.addData_(labels, data);\n    this.update();\n  }\n  // Dynamic remove data, orientation is 'ildest' or 'latest'\n  removeData(orientation: Orientation): void {\n    this.removeData_(orientation);\n    this.update();\n  }\n\n  private refresh(): void {\n    this.ngOnDestroy();\n    this.chart = this.getChartBuilder(this.ctx/*, data, this.options*/);\n    this.addChart(this.id);\n  }\n\n  private removeChart(id: string): void {\n    if (this.element.nativeElement.hasAttribute('id')) {\n      this.storeService.removeChart(this.element.nativeElement.id);\n      return;\n    }\n    if (id !== null && id !== undefined) {\n      this.storeService.removeChart(id);  // delete chart instance.\n    }\n  }\n\n  private addChart(id: string): void {\n    if (this.element.nativeElement.hasAttribute('id')) {\n      this.storeService.addChart(this.element.nativeElement.id, this.chart);\n      return;\n    }\n    if (id !== null && id !== undefined) {\n      this.storeService.addChart(id, this.chart);\n    }\n  }\n\n  private updateChartData(newDataValues: number[] | any[]): void {\n    if (Array.isArray(newDataValues[0].data)) {\n      this.chart.data.datasets.forEach((dataset: Chart.ChartDataSets, i: number) => {\n        dataset.data = newDataValues[i].data;\n\n        if (newDataValues[i].label) {\n          dataset.label = newDataValues[i].label;\n        }\n      });\n    } else {\n      this.chart.data.datasets[0].data = newDataValues;\n    }\n    // update colors\n    this.chart.data.datasets = this.updateColors(this.chart.data.datasets);\n  }\n\n  private getChartBuilder(ctx: CanvasRenderingContext2D/*, data:Array<any>, options:any*/): Chart {\n    const datasets = this.getDatasets();\n\n    const options: Chart.ChartOptions = Object.assign({}, this.options); // æ·±å¤å¶options\n    if (this.legend === false) {  // è®¾ç½®optionsçlegend TODO: åç»­è¿ä¸ªå±æ§å»é¤ï¼ç´æ¥å¨optionsåè®¾ç½®\n      options.legend = { display: false };\n    }\n    // hock for onHover and onClick events\n    options.hover = options.hover || {};\n    if (!options.hover.onHover) {\n      options.hover.onHover = (event: MouseEvent, active: Array<{}>) => {\n        if (active && !active.length) {\n          return;\n        }\n        this.chartHover.emit({ event, active });\n      };\n    }\n\n    if (!options.onClick) {\n      options.onClick = (event: MouseEvent, active: Array<{}>) => {\n        this.chartClick.emit({ event, active });\n      };\n    }\n\n    const opts = {\n      type: this.chartType,\n      data: {\n        labels: this.labels,\n        datasets: datasets   // TODO: åç»­æ´æ¹è¿ä¸ªå±æ§åå­ï¼å¦åè­¦å\n      },\n      options: options,   // TODO: åç»­æ´æ¹è¿ä¸ªå±æ§åå­ï¼å¦åè­¦å\n      plugins: this.inlinePlugins\n    };\n\n    return new Chart(ctx, opts);\n  }\n\n  // è·å chart.jsçdatasetsæ°æ®\n  private getDatasets(): Chart.ChartDataSets[] {\n    let datasets: Chart.ChartDataSets[] = void 0;\n    // in case if datasets is not provided, but data is present\n    if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\n      if (Array.isArray(this.data[0])) {\n        datasets = (this.data as number[][]).map((data: number[], index: number) => {\n          return { data, label: this.labels[index] || `Label ${index}` };\n        });\n      } else {\n        datasets = [{ data: this.data, label: `Label 0` }];\n      }\n    }\n\n    datasets = this.updateColors(datasets); // update colors\n\n    if (!datasets) {\n      throw new Error(`ng-chartjs configuration error,\n      data or datasets field are required to render char ${this.chartType}`);\n    }\n\n    return datasets;\n  }\n\n  // update dataset colors\n  private updateColors(datasets: Chart.ChartDataSets[]): Chart.ChartDataSets[] {\n    if (this.datasets && this.datasets.length || (datasets && datasets.length)) {\n      // fix elm type, pre type is number\n      datasets = (this.datasets || datasets).map((elm: Chart.ChartDataSets, index: number) => {\n        const newElm: Chart.ChartDataSets = Object.assign({}, elm);\n        if (this.colors && this.colors.length) {\n          Object.assign(newElm, this.colors[index]);\n        } else {\n          Object.assign(newElm, getColors(this.chartType, index, newElm.data.length));\n        }\n        return newElm;\n      });\n    }\n    return datasets;\n  }\n\n  private addData_(labels: Labels[], data: any[][]): void {\n    if (labels.length === 0 || data.length === 0) {\n      return;\n    }\n    // update labels\n    labels.forEach((label) => { this.chart.data.labels.push(label); });\n\n    this.chart.data.datasets.forEach((dataset, index) => {\n      if (data[index]) {\n        for (let i = 0; i < data[index].length; i++) {\n          dataset.data.push(data[index][i]);\n        }\n      } else {\n        console.log('The added data does not match the original data');\n        return;\n      }\n    });\n  }\n\n  private removeData_(orientation: Orientation): void {\n    // fix: support to oldest feature\n    if (orientation === 'latest') {\n      this.chart.data.labels.pop();\n      this.chart.data.datasets.forEach((dataset: Chart.ChartDataSets) => {\n        dataset.data.pop();\n      });\n    } else if (orientation === 'oldest') {\n      this.chart.data.labels.shift();\n      this.chart.data.datasets.forEach((dataset: Chart.ChartDataSets) => {\n        dataset.data.shift();\n      });\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const NgChartjsCustomPluginToken: InjectionToken<any> = new InjectionToken<any[]>('[ngx-chart-js] Global Default Plugin');\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { NgChartjsDirective } from './ng-chartjs.directive';\nimport { NgChartjsCustomPluginToken } from './plugin-token';\nimport { PluginConfig } from './plugins-config';\nimport { NgChartjsService } from './ng-chartjs.service';\n\nexport function ngChartjsCustomPluginsFactory(plugins: any[]): PluginConfig {\n  const pluginConfig = new PluginConfig();\n  pluginConfig.plugins = plugins;\n  return pluginConfig;\n}\n\n@NgModule({\n  imports: [],\n  declarations: [NgChartjsDirective],\n  exports: [NgChartjsDirective],\n  providers: [NgChartjsService]\n})\nexport class NgChartjsModule {\n  /**\n   * Register a plugin.\n   * @param plugin\n   */\n  public static registerPlugin(plugins: any[] = []): ModuleWithProviders<NgChartjsModule> {\n    return {\n      ngModule: NgChartjsModule,\n      providers: [\n        {\n          provide: NgChartjsCustomPluginToken,\n          useValue: plugins\n        },\n        {\n          deps: [NgChartjsCustomPluginToken],\n          provide:  PluginConfig,\n          useFactory: ngChartjsCustomPluginsFactory\n        }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of ng-chartjs\n */\nexport * from './lib/ng-chartjs.directive';\nexport * from './lib/ng-chartjs.module';\nexport * from './lib/ng-chartjs.service';\nexport * from './lib/colors';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {NgChartjsCustomPluginToken as Éµc} from './lib/plugin-token';\nexport {PluginConfig as Éµb} from './lib/plugins-config';\nexport {StoreService as Éµa} from './lib/store.service';"]}